---
import { getCollection, type CollectionEntry } from 'astro:content';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';

export async function getStaticPaths() {
    const posts = await getCollection('blog');
    return posts.map((post: CollectionEntry<'blog'>) => ({
        params: { slug: post.slug },
        props: post,
    }));
}

type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await post.render();
---

<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link rel="stylesheet" href="/src/styles/design-system.css" />
    <title>{post.data.title} - Hoogly Blog</title>
    <meta name="description" content={post.data.description} />
</head>
<body>
    <Header />

    <main>
        <article class="blog-post">
            <header class="post-header">
                <div class="container">
                    <h1 class="post-title">{post.data.title}</h1>
                    
                    <div class="post-meta-large">
                        <time datetime={post.data.publishDate.toISOString()}>
                            {post.data.publishDate.toLocaleDateString('en-US', {
                                year: 'numeric',
                                month: 'long',
                                day: 'numeric'
                            })}
                        </time>
                        {post.data.author && (
                            <span class="author">by {post.data.author}</span>
                        )}
                    </div>

                    <p class="post-description-large">{post.data.description}</p>
                    
                    {post.data.tags && post.data.tags.length > 0 && (
                        <div class="post-tags-large">
                            {post.data.tags.map((tag: string) => (
                                <span class="post-tag">{tag}</span>
                            ))}
                        </div>
                    )}
                </div>
            </header>

            <div class="post-content">
                <div class="container">
                    <Content />
                </div>
            </div>
        </article>

        <nav class="post-nav">
            <div class="container">
                <a href="/blog" class="back-to-blog">‚Üê Back to Blog</a>
            </div>
        </nav>
    </main>

    <Footer />
</body>
</html> 