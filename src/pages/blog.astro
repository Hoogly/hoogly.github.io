---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';

// Get all blog posts and sort by publish date
type Post = Awaited<ReturnType<typeof getCollection>>[number];
const allPosts = await getCollection('blog');
const sortedPosts = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime());

// Capitalize tags for filter dropdown
function capitalize(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}

// Get all unique tags for filter dropdown
const allTags = Array.from(new Set(sortedPosts.flatMap(post => post.data.tags || [])));
---

<Layout 
    title="Blog - Hoogly"
    description="Read our latest blog posts and insights on employee engagement, workplace culture, and AI-powered solutions."
    type="website"
    bodyClass="blog"
>
    <section class="blog-header" style="background: transparent; padding: var(--space-20) 0;">
        <div class="container">
            <h1 style="font-size: 3.5rem; font-weight: 500; color: #23221F; font-family: 'Outfit', sans-serif; margin: 0 0 1rem 0; line-height: 1.2; text-align: center;">
                Blog
            </h1>
            <p style="font-size: var(--font-size-xl); color: var(--color-neutral-600); max-width: 600px; margin: 0 auto; font-family: 'Outfit', sans-serif; font-weight: 400; text-align: center; line-height: 1.6;">
                Latest posts and insights on employee engagement, workplace culture, and AI-powered solutions
            </p>
        </div>
    </section>

    <section class="blog-featured-section" style="max-width: 1100px; margin: 0 auto 1.5rem auto;">
        <div style="display: flex; flex-wrap: wrap; background: #fff; border-radius: 24px; overflow: hidden; box-shadow: 0 2px 12px 0 rgba(0,0,0,0.04); min-height: 340px; height: 100%; align-items: stretch;">
            <a href={`/blog/${sortedPosts[0].slug}`} style="flex: 1 1 380px; min-width: 320px; max-width: 50%; display: flex; height: auto; align-items: stretch;">
                <img src={sortedPosts[0].data.image ? sortedPosts[0].data.image : '/images/Blog%20Header.jpg'} alt={sortedPosts[0].data.title} style="width: 100%; height: 100%; object-fit: cover; display: block; min-height: 340px;" />
            </a>
            <div style="flex: 1 1 420px; min-width: 320px; padding: 2.5rem 2.5rem 2rem 2.5rem; display: flex; flex-direction: column; justify-content: center; height: auto;">
                <div style="margin-bottom: 1.2rem;">
                    {sortedPosts[0].data.tags && sortedPosts[0].data.tags.length > 0 && (
                        <span class="post-tag" style="font-size: 1rem; font-weight: 500; padding: 4px 16px; border-radius: 20px; margin-bottom: 0;">{capitalize(sortedPosts[0].data.tags[0])}</span>
                    )}
                </div>
                <a href={`/blog/${sortedPosts[0].slug}`} style="text-decoration: none; color: inherit;">
                    <h2 style="font-size: 2.3rem; font-weight: 600; color: #23221F; margin: 0 0 1.2rem 0; line-height: 1.15; max-width: 95%;">{sortedPosts[0].data.title}</h2>
                </a>
                <div style="font-size: 1.1rem; color: #23221F; opacity: 0.8; margin-bottom: 2.2rem; max-width: 95%; line-height: 1.5; display: -webkit-box; -webkit-line-clamp: 3; -webkit-box-orient: vertical; overflow: hidden; text-overflow: ellipsis;">
                    {sortedPosts[0].data.description}
                </div>
                <div style="font-size: 1rem; color: #23221F; opacity: 0.7; display: flex; align-items: center; gap: 1.2em;">
                    <span>{sortedPosts[0].data.publishDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}</span>
                    <span style="font-size: 1.2em;">·</span>
                    <span>3 min</span>
                </div>
            </div>
        </div>
    </section>

    <section class="blog-posts" style="padding: var(--space-16) 0;">
        <div class="container">
            <div id="posts-grid" class="posts-grid" style="grid-template-columns: repeat(3, 1fr); gap: 2rem;">
                {sortedPosts.slice(1, 7).map((post, idx) => (
                    <a href={`/blog/${post.slug}`} style="text-decoration: none; color: inherit;">
                        <article class="blog-post-card animate-in">
                            <img src={post.data.image ? post.data.image : '/images/Blog%20Header.jpg'} alt={post.data.title} class="blog-card-image" />
                            <div class="blog-card-content">
                                <div class="blog-card-top">
                                    <h2 class="post-card-title">{post.data.title}</h2>
                                    <div class="post-tags" style="min-height: 2.5em; margin-top: 0.5rem;">
                                        {post.data.tags?.slice(0, 3).map((tag) => (
                                            <span class="post-tag">{capitalize(tag)}</span>
                                        ))}
                                    </div>
                                </div>
                                <div class="post-meta">
                                    <span>{post.data.publishDate.toLocaleDateString('en-US', {
                                        year: 'numeric',
                                        month: 'short',
                                        day: 'numeric'
                                    })}</span>
                                    <span style="margin: 0 0.5em;">•</span>
                                    <span>{post.data.author ? `${post.data.author.split(' ')[0]} ${post.data.author.split(' ')[1]?.charAt(0) ? post.data.author.split(' ')[1].charAt(0) + '.' : ''}` : ''}</span>
                                    <span style="margin: 0 0.5em;">•</span>
                                    <span>3 min</span>
                                </div>
                            </div>
                        </article>
                    </a>
                ))}
            </div>
        </div>
    </section>

    <script type="module">
    // Simple client-side filter for demonstration (Astro doesn't support reactivity out of the box)
    window.filterPosts = function(event) {
        const value = event.target.value;
        const allCards = document.querySelectorAll('.posts-grid > a');
        allCards.forEach(card => {
            const tags = Array.from(card.querySelectorAll('.post-tag')).map(el => el.textContent);
            if (!value || tags.includes(value)) {
                card.style.display = '';
            } else {
                card.style.display = 'none';
            }
        });
    }
    </script>
</Layout>

<style>
body.blog {
  background: linear-gradient(to bottom, #F7F3F0 0%, #fff 100%) !important;
}

/* Set Outfit font for all text elements on the blog page */
.blog-header,
.blog-posts,
.blog-post-card,
.post-card-title,
.post-card-title a,
.post-meta,
.post-meta time,
.post-meta .author,
.post-description,
.post-tags,
.post-tag,
.read-more {
  font-family: 'Outfit', sans-serif !important;
}

/* Animation styles for blog post cards */
.animate-in {
  opacity: 0;
  transform: translateY(40px);
  transition: opacity 1.2s cubic-bezier(0.77,0,0.175,1), transform 1.2s cubic-bezier(0.77,0,0.175,1);
}
.animate-in.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Blog post card background with opacity and blur */
.blog-post-card {
  background: #fff;
  border-radius: 1.5rem;
  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.04);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  padding: 0;
  transition: box-shadow 0.2s, transform 0.2s;
  min-height: 420px;
  height: 100%;
}
.blog-card-image {
  width: 100%;
  height: auto;
  object-fit: cover;
  border-radius: 1.5rem 1.5rem 0 0;
  flex-shrink: 0;
}
.blog-card-content {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 12px;
  padding: 1.5rem 1.5rem 1.2rem 1.5rem;
  flex: 1 0 0;
  justify-content: space-between;
}
.blog-card-top {
  display: flex;
  flex-direction: column;
  gap: 12px;
  width: 100%;
}
.post-tags {
  margin-bottom: 0.5rem;
  display: flex;
  flex-wrap: wrap;
  gap: 4px;
}
.post-tag {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  min-height: 24px;
  padding: 2px 8px;
  gap: 2px;
  border-radius: 20px;
  border: 1px solid var(--fg-neutral-primary-1, #000);
  background: #F7F3F0;
  backdrop-filter: blur(6px);
  font-size: 1rem;
  font-weight: 500;
  color: #23221F;
  margin-bottom: 0.5em;
  text-transform: capitalize;
  width: auto;
  min-width: 0;
  text-align: center;
}
.post-card-title {
  font-size: 1.35rem;
  font-weight: 600;
  color: #23221F;
  margin: 0 0 0.5rem 0;
  line-height: 1.2;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  min-height: 4.8rem;
}
.post-card-title a {
  color: inherit;
  text-decoration: none;
}
.post-meta {
  font-size: 1rem;
  color: #444;
  display: flex;
  align-items: center;
  gap: 0.5em;
  margin-top: 0.5rem;
}

/* Responsive design */
@media (max-width: 768px) {
  .posts-grid {
    grid-template-columns: repeat(2, 1fr) !important;
    gap: 1.5rem !important;
  }
  
  .blog-header h1 {
    font-size: 2.5rem !important;
  }
  
  .blog-header p {
    font-size: var(--font-size-lg) !important;
  }

  .blog-featured-section > div {
    flex-direction: column !important;
    align-items: stretch !important;
    min-height: unset !important;
    height: auto !important;
  }
  .blog-featured-section a {
    max-width: 100% !important;
    min-width: 0 !important;
    flex: none !important;
    display: block !important;
    height: auto !important;
  }
  .blog-featured-section img {
    width: 100% !important;
    height: auto !important;
    border-radius: 24px 24px 0 0 !important;
    min-height: unset !important;
    max-height: 320px;
    object-fit: cover;
    display: block;
  }
  .blog-featured-section > div > div {
    padding: 2rem 1.2rem 1.5rem 1.2rem !important;
    min-width: 0 !important;
    height: auto !important;
  }
}

@media (max-width: 600px) {
  .posts-grid {
    grid-template-columns: 1fr !important;
    gap: 1rem !important;
  }
  
  .blog-card-image {
    height: auto;
  }
  .blog-card-content {
    padding: 1rem 1rem 0.8rem 1rem;
    gap: 8px;
  }
  .post-card-title {
    font-size: 1.1rem;
    min-height: 3.9rem;
  }
  
  .blog-header h1 {
    font-size: 2rem !important;
  }
  
  .blog-header p {
    font-size: var(--font-size-base) !important;
  }
}

.post-tags-clamp {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

body.blog, .blog-header, .blog-header *, .blog-posts, .blog-posts *, .blog-post-card, .blog-post-card *, .post-card-title, .post-card-title a, .post-meta, .post-meta time, .post-meta .author, .post-description, .post-tags, .post-tag, .read-more {
  color: #23221F !important;
}

.blog-category-select option:checked, .blog-category-select option[selected] {
  background: #23221F !important;
  color: #fff !important;
}
.blog-category-select:focus {
  outline: none;
}
</style>

<script>
window.addEventListener('DOMContentLoaded', function() {
  // Animate hero highlight
  const highlight = document.querySelector('.hero-highlight');
  if (highlight) {
    setTimeout(() => highlight.classList.add('animated'), 200);
  }

  // Animate blog post cards on scroll
  document.querySelectorAll('.blog-post-card.animate-in').forEach(card => {
    const observer = new window.IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          card.classList.add('visible');
          observer.disconnect();
        }
      });
    }, { threshold: 0.3 });
    observer.observe(card);
  });
});
</script> 