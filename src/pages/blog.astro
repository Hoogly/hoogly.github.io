---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';

// Get all blog posts and sort by publish date
const allPosts = await getCollection('blog');
const sortedPosts = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime());
---

<Layout 
    title="Blog - Hoogly"
    description="Read our latest blog posts and insights on employee engagement, workplace culture, and AI-powered solutions."
    type="website"
    bodyClass="blog"
>
    <section class="blog-header" style="background: linear-gradient(135deg, #F6F4FE 0%, #F5E9FA 100%); padding: var(--space-20) 0;">
        <div class="container">
            <h1 style="font-size: 3.5rem; font-weight: 500; color: #23221F; font-family: 'Outfit', sans-serif; margin: 0 0 1rem 0; line-height: 1.2; text-align: center;">
                <span class="hero-highlight"><span class="hero-highlight-text">Blog</span></span>
            </h1>
            <p style="font-size: var(--font-size-xl); color: var(--color-neutral-600); max-width: 600px; margin: 0 auto; font-family: 'Outfit', sans-serif; font-weight: 400; text-align: center; line-height: 1.6;">
                Latest posts and insights on employee engagement, workplace culture, and AI-powered solutions
            </p>
        </div>
    </section>

    <section class="blog-posts" style="padding: var(--space-16) 0;">
        <div class="container">
            <div class="posts-grid" style="grid-template-columns: repeat(3, 1fr); gap: 2rem;">
                {sortedPosts.slice(0, 6).map((post, idx) => (
                    <a href={`/blog/${post.slug}`} style="text-decoration: none; color: inherit;">
                        <article class="blog-post-card animate-in">
                            <div class="blog-card-image" style={`background-image: url('${post.data.image ? post.data.image : '/images/Blog%20Header.jpg'}')`}></div>
                            <div class="blog-card-content">
                                <div class="blog-card-top">
                                    <h2 class="post-card-title">{post.data.title}</h2>
                                </div>
                                <div class="post-meta">
                                    <span>{post.data.publishDate.toLocaleDateString('en-US', {
                                        year: 'numeric',
                                        month: 'short',
                                        day: 'numeric'
                                    })}</span>
                                    <span style="margin: 0 0.5em;">•</span>
                                    <span>{post.data.author ? `${post.data.author.split(' ')[0]} ${post.data.author.split(' ')[1]?.charAt(0) ? post.data.author.split(' ')[1].charAt(0) + '.' : ''}` : ''}</span>
                                    <span style="margin: 0 0.5em;">•</span>
                                    <span>3 min</span>
                                </div>
                                <div class="post-tags post-tags-clamp" style="min-height: 2.5em; margin-top: 0.5rem;">
                                    {post.data.tags?.slice(0, idx === 0 ? 2 : 3).map((tag) => (
                                        <span class="post-tag">{tag}</span>
                                    ))}
                                </div>
                            </div>
                        </article>
                    </a>
                ))}
            </div>
        </div>
    </section>
</Layout> 

<style>
/* Set Outfit font for all text elements on the blog page */
.blog-header,
.blog-posts,
.blog-post-card,
.post-card-title,
.post-card-title a,
.post-meta,
.post-meta time,
.post-meta .author,
.post-description,
.post-tags,
.post-tag,
.read-more {
  font-family: 'Outfit', sans-serif !important;
}

/* Animation styles for blog post cards */
.animate-in {
  opacity: 0;
  transform: translateY(40px);
  transition: opacity 1.2s cubic-bezier(0.77,0,0.175,1), transform 1.2s cubic-bezier(0.77,0,0.175,1);
}
.animate-in.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Blog post card background with opacity and blur */
.blog-post-card {
  background: #fff;
  border-radius: 1.5rem;
  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.04);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  padding: 0;
  transition: box-shadow 0.2s, transform 0.2s;
  min-height: 420px;
  height: 100%;
}
.blog-card-image {
  width: 100%;
  height: 240px;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  flex-shrink: 0;
}
.blog-card-content {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 12px;
  padding: 1.5rem 1.5rem 1.2rem 1.5rem;
  flex: 1 0 0;
  justify-content: space-between;
}
.blog-card-top {
  display: flex;
  flex-direction: column;
  gap: 12px;
  width: 100%;
}
.post-tags {
  margin-bottom: 0.5rem;
}
.post-tag {
  display: inline-block;
  font-size: 1rem;
  font-weight: 500;
  border-radius: 999px;
  padding: 0.2em 1em;
  border: 1.5px solid #3bb273;
  background: #e6f7ee;
  color: #217a4a;
  margin-bottom: 0.5em;
  text-transform: capitalize;
}
.post-card-title {
  font-size: 1.35rem;
  font-weight: 600;
  color: #23221F;
  margin: 0 0 0.5rem 0;
  line-height: 1.2;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  min-height: 4.8rem;
}
.post-card-title a {
  color: inherit;
  text-decoration: none;
}
.post-meta {
  font-size: 1rem;
  color: #444;
  display: flex;
  align-items: center;
  gap: 0.5em;
  margin-top: 0.5rem;
}

/* Responsive design */
@media (max-width: 768px) {
  .posts-grid {
    grid-template-columns: repeat(2, 1fr) !important;
    gap: 1.5rem !important;
  }
  
  .blog-header h1 {
    font-size: 2.5rem !important;
  }
  
  .blog-header p {
    font-size: var(--font-size-lg) !important;
  }
}

@media (max-width: 600px) {
  .posts-grid {
    grid-template-columns: 1fr !important;
    gap: 1rem !important;
  }
  
  .blog-card-image {
    height: 160px;
  }
  .blog-card-content {
    padding: 1rem 1rem 0.8rem 1rem;
    gap: 8px;
  }
  .post-card-title {
    font-size: 1.1rem;
    min-height: 3.9rem;
  }
  
  .blog-header h1 {
    font-size: 2rem !important;
  }
  
  .blog-header p {
    font-size: var(--font-size-base) !important;
  }
}

.post-tags-clamp {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
</style>

<script>
window.addEventListener('DOMContentLoaded', function() {
  // Animate hero highlight
  const highlight = document.querySelector('.hero-highlight');
  if (highlight) {
    setTimeout(() => highlight.classList.add('animated'), 200);
  }

  // Animate blog post cards on scroll
  document.querySelectorAll('.blog-post-card.animate-in').forEach(card => {
    const observer = new window.IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          card.classList.add('visible');
          observer.disconnect();
        }
      });
    }, { threshold: 0.3 });
    observer.observe(card);
  });
});
</script> 